package com.com.sky.downloader.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.hellocat.bean.Breed;
import com.example.hellocat.bean.FavouriteCats;
import com.example.hellocat.bean.BreedImage;
import com.example.hellocat.bean.Categories;

import com.com.sky.downloader.greendao.BreedDao;
import com.com.sky.downloader.greendao.FavouriteCatsDao;
import com.com.sky.downloader.greendao.BreedImageDao;
import com.com.sky.downloader.greendao.CategoriesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig breedDaoConfig;
    private final DaoConfig favouriteCatsDaoConfig;
    private final DaoConfig breedImageDaoConfig;
    private final DaoConfig categoriesDaoConfig;

    private final BreedDao breedDao;
    private final FavouriteCatsDao favouriteCatsDao;
    private final BreedImageDao breedImageDao;
    private final CategoriesDao categoriesDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        breedDaoConfig = daoConfigMap.get(BreedDao.class).clone();
        breedDaoConfig.initIdentityScope(type);

        favouriteCatsDaoConfig = daoConfigMap.get(FavouriteCatsDao.class).clone();
        favouriteCatsDaoConfig.initIdentityScope(type);

        breedImageDaoConfig = daoConfigMap.get(BreedImageDao.class).clone();
        breedImageDaoConfig.initIdentityScope(type);

        categoriesDaoConfig = daoConfigMap.get(CategoriesDao.class).clone();
        categoriesDaoConfig.initIdentityScope(type);

        breedDao = new BreedDao(breedDaoConfig, this);
        favouriteCatsDao = new FavouriteCatsDao(favouriteCatsDaoConfig, this);
        breedImageDao = new BreedImageDao(breedImageDaoConfig, this);
        categoriesDao = new CategoriesDao(categoriesDaoConfig, this);

        registerDao(Breed.class, breedDao);
        registerDao(FavouriteCats.class, favouriteCatsDao);
        registerDao(BreedImage.class, breedImageDao);
        registerDao(Categories.class, categoriesDao);
    }
    
    public void clear() {
        breedDaoConfig.clearIdentityScope();
        favouriteCatsDaoConfig.clearIdentityScope();
        breedImageDaoConfig.clearIdentityScope();
        categoriesDaoConfig.clearIdentityScope();
    }

    public BreedDao getBreedDao() {
        return breedDao;
    }

    public FavouriteCatsDao getFavouriteCatsDao() {
        return favouriteCatsDao;
    }

    public BreedImageDao getBreedImageDao() {
        return breedImageDao;
    }

    public CategoriesDao getCategoriesDao() {
        return categoriesDao;
    }

}
